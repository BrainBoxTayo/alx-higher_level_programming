>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

# handling 1 list i.e not a matrix
>>> matrix = [[1, 2, 3]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

#handling empty list
>>> matrix = []
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

#handling division by 0
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

#handling when div is not an integer or float
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> print(matrix_divided(matrix, "23"))
Traceback (most recent call last):
TypeError: div must be a number

#handling when an element is not an integer or float
>>> matrix = [[1, 2, 3], [4, "5", 6], [7, 8, 9]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

